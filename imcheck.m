% Draw the projection of 3D CAD model and also 
% draw the Visible anchor points
% a = azimuth, e = elevation, d = distance
% interval_check : difference between depth of every anchor points and
% that of plane generated by z-buffer (might not used)
function interval_check = imcheck(cls, index, a, e, d)

switch cls
    case 'car'
        anchor = {'left_front_wheel', 'left_back_wheel',...
            'right_front_wheel', 'right_back_wheel',...
            'upper_left_windshield', 'lower_left_windshield',...
            'upper_right_windshield', 'lower_right_windshield',...
            'upper_left_rearwindow', 'lower_left_rearwindow',...
            'upper_right_rearwindow', 'lower_right_rearwindow',...
            'left_front_light', 'right_front_light',...
            'left_back_trunk', 'right_back_trunk',...
            'left_window_center', 'right_window_center',...
            'left_window_up', 'right_window_up'};
    case 'chair'
        anchor = {'back_upper_left', 'back_upper_right',...
            'seat_upper_left', 'seat_upper_right',...
            'seat_lower_left', 'seat_lower_right',...
            'leg_upper_left', 'leg_upper_right',...
            'leg_lower_left', 'leg_lower_right'};
end
filename = sprintf('Anchor/%s/%02d.off', cls, index);
load(sprintf('./datamatrix/%s_%02d.mat',cls,index));
p = data(1,e/15+(a/15)*7+1).p;
% [vis,p,interval_check] = zbuffer_anchor(vertices, anchor, cls, index, a, e, d);
load(sprintf('./mesh_images/%02d_plane_mesh_%d_%d_%d',index, a, e, d));
[row col] = find(plane_mesh);
maxcol = max(col);
col = -col + maxcol + 1;
p(:,2) = -p(:,2) + maxcol + 1;
plot(row,col,'b.');
hold on;
% plot(p(:,1),p(:,2),'mo','LineWidth',2,'MarkerEdgeColor','k',...
%                 'MarkerFaceColor',[.49 1 .63],'MarkerSize',10);
plot(p(:,1),p(:,2),'ro','LineWidth',2,'MarkerEdgeColor','r',...
                'MarkerFaceColor','r','MarkerSize',10);
axis equal;