% This file make vector that contains the information of visible anchor
% points
% vis : vector that contains 0 or 1 which represent corresponding anchor
% point is visible or not
% p : matrix that contains position of visible anchor points
% interval_check : difference between depth of every anchor points and
% that of plane generated by z-buffer
function [vis,p,interval_check] = zbuffer_anchor(vertices, anchor, cls, index, a, e, d)

projCenter = zProjection(vertices, 3000, a, e ,d);
cad.pnames = anchor;
% load anchor points
for i = 1:numel(anchor)
    filename = sprintf('Anchor/%s/%02d_%s.off', cls, index, anchor{i});
    X = load_off_file(filename);
    if size(X,1) > 1
        X = mean(X);
    end
    cad.(anchor{i}) = X;
    projCad = zProjection(X, 3000, a, e ,d);
    anchorPoint(i,1) = round(4*(projCad(1) - min(projCenter(:,1))) + 1);
    anchorPoint(i,2) = round(4*(projCad(2) - min(projCenter(:,2))) + 1);
    anchorPoint(i,3) = projCad(3);
end
z = anchorPoint(:,3);
z = 150*(z-mean(projCenter(:,3)));
anchorPoint(:,3) = z + abs(min(z)) + 1;

p = [];
vis = zeros(length(anchorPoint),1);
load(sprintf('./mesh_images/%02d_plane_%d_%d_%d',index,a,e,d));
for i = 1:size(anchorPoint,1)
    interval_check(i) = plane(anchorPoint(i,1),anchorPoint(i,2)) - anchorPoint(i,3);
    if(plane(anchorPoint(i,1),anchorPoint(i,2)) >= anchorPoint(i,3))
        p = [p ; anchorPoint(i,1:2)];
        vis(i) = 1;
    end
end